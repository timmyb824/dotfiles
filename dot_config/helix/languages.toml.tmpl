##############################
## Configuration for lsp-ai ##
##############################

# CURRENTLY BROKEN
# [language-server.lsp-ai]
# command = "lsp-ai"
# args = ["--config", "/Users/timothybryant/.config/helix/lsp-ai.json"]

#################################
## Configuration for helix-gpt ##
#################################

[language-server.gpt]
command = "helix-gpt"
args = [ "--handler", "copilot", "--copilotApiKey", "{{ onepasswordRead "op://Personal/helix-gpt/credential" }}" ]
config = {}

##############################
## Configuration for python ##
##############################

[[language]]
name = "python"
file-types = ["py", "pyi", "py3", "pyw", ".pythonstartup", ".pythonrc"]
auto-format = true
formatter = { command = "black", args = ["-q", "-"] }
language-servers = ["pyright", "gpt", "pylyzer"]
indent = { tab-width = 4, unit = "    " }

[language-server.pyright.config.python.analysis]
typeCheckingMode = "basic"

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.pylyzer]
command = "pylyzer"
args = ["--server"]

# [language-server.pylsp.config.pylsp.plugins]
# flake8 = { enabled = false, ignore = ["E501"] }
# autopep8 = { enabled = false }
# mccabe = { enabled = false }
# pycodestyle = { enabled = false }
# pyflakes = { enabled = false }
# pylint = { enabled = false }
# yapf = { enabled = false }
# ruff = { enabled = false }
# black = { enabled = true }

##############################
## Configuration for yaml   ##
##############################

[[language]]
name = "yaml-language-server"
auto-format = true
formatter = { command = "yamlfmt", args = ["-"] }
language-servers = [ "gpt", "yaml-language-server" ]

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
validation = true

###############################
## Configuration for JS/TS   ##
###############################

[[language]]
name = "typescript"
auto-format = true
indent = { tab-width = 2, unit = " " }
formatter = { command = "prettier", args = ["--parser", "typescript"] }
language-servers = [
  "typescript-language-server",
  "vscode-eslint-language-server",
  "gpt"
]

[[language]]
name = "javascript"
auto-format = true
indent = { tab-width = 2, unit = " " }
formatter = { command = "prettier", args = ["--parser", "typescript"] }
language-servers = [
  "typescript-language-server",
  "vscode-eslint-language-server",
  "gpt"
]


############################
## Configuration for bash ##
############################

[language-server.bash]
command = "bash-language-server"
language-id = "bash"

[[language]]
name = "bash"
auto-format = true
indent = { tab-width = 2, unit = " " }
formatter = { command = "beautysh" }
language-servers = [
  "bash",
  "gpt"
]

##########################
## Configuration for Go ##
##########################

[language-server.go]
command = "gopls"
language-id = "go"

[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }
language-servers = [
  "gopls",
  "gpt"
]

############################
## Configuration for JSON ##
############################

[[language]]
name = "json"
auto-format = true
#formatter = { command = "prettier", args = ["--parser", "json"] }
language-servers = [
  "json",
  "gpt"
]

[language-server.json]
language-id = "json"
config = { "provideFormatter" = true, "json" = { "keepLines" = { "enable" = true } } }

############################
## Configuration for Rust ##
############################

[[language]]
name = "rust"
auto-format = true
language-servers = [
  "rust-analyzer",
  "gpt"
]
roots = [
  "Cargo.toml",
  "Cargo.lock"
]

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

[language-server.rust-analyzer.config.check]
command = "clippy"

#################################
## Configuration for Terraform ##
#################################

[[language]]
name = "hcl"
language-servers = [ "terraform-ls" ]
language-id = "terraform"

[[language]]
name = "tfvars"
language-servers = [ "terraform-ls" ]
language-id = "terraform-vars"

[language-server.terraform-ls]
command = "terraform-ls"
args = ["serve"]

############################
## Configuration for TOML ##
############################

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
